// Code generated by protoc-gen-go. DO NOT EDIT.
// source: modelrpc.proto

/*
Package learning is a generated protocol buffer package.

It is generated from these files:
	modelrpc.proto

It has these top-level messages:
	LearningRequest
	LearningResult
*/
package learning

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LearningRequest struct {
	Input  string `protobuf:"bytes,1,opt,name=input" json:"input,omitempty"`
	Length int32  `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
}

func (m *LearningRequest) Reset()                    { *m = LearningRequest{} }
func (m *LearningRequest) String() string            { return proto.CompactTextString(m) }
func (*LearningRequest) ProtoMessage()               {}
func (*LearningRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LearningRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *LearningRequest) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type LearningResult struct {
	Response string  `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Error    float32 `protobuf:"fixed32,2,opt,name=error" json:"error,omitempty"`
}

func (m *LearningResult) Reset()                    { *m = LearningResult{} }
func (m *LearningResult) String() string            { return proto.CompactTextString(m) }
func (*LearningResult) ProtoMessage()               {}
func (*LearningResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LearningResult) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *LearningResult) GetError() float32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func init() {
	proto.RegisterType((*LearningRequest)(nil), "learning.LearningRequest")
	proto.RegisterType((*LearningResult)(nil), "learning.LearningResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Learning service

type LearningClient interface {
	Train(ctx context.Context, in *LearningRequest, opts ...grpc.CallOption) (*LearningResult, error)
}

type learningClient struct {
	cc *grpc.ClientConn
}

func NewLearningClient(cc *grpc.ClientConn) LearningClient {
	return &learningClient{cc}
}

func (c *learningClient) Train(ctx context.Context, in *LearningRequest, opts ...grpc.CallOption) (*LearningResult, error) {
	out := new(LearningResult)
	err := grpc.Invoke(ctx, "/learning.Learning/Train", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Learning service

type LearningServer interface {
	Train(context.Context, *LearningRequest) (*LearningResult, error)
}

func RegisterLearningServer(s *grpc.Server, srv LearningServer) {
	s.RegisterService(&_Learning_serviceDesc, srv)
}

func _Learning_Train_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LearningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LearningServer).Train(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/learning.Learning/Train",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LearningServer).Train(ctx, req.(*LearningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Learning_serviceDesc = grpc.ServiceDesc{
	ServiceName: "learning.Learning",
	HandlerType: (*LearningServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Train",
			Handler:    _Learning_Train_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modelrpc.proto",
}

func init() { proto.RegisterFile("modelrpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xcd, 0x4f, 0x49,
	0xcd, 0x29, 0x2a, 0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x49, 0x4d, 0x2c,
	0xca, 0xcb, 0xcc, 0x4b, 0x57, 0xb2, 0xe7, 0xe2, 0xf7, 0x81, 0xb2, 0x83, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x33, 0xf3, 0x0a, 0x4a, 0x4b, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x20, 0x1c, 0x21, 0x31, 0x2e, 0xb6, 0x9c, 0xd4, 0xbc, 0xf4, 0x92, 0x0c, 0x09, 0x26,
	0x05, 0x46, 0x0d, 0xd6, 0x20, 0x28, 0x4f, 0xc9, 0x89, 0x8b, 0x0f, 0x61, 0x40, 0x71, 0x69, 0x4e,
	0x89, 0x90, 0x14, 0x17, 0x47, 0x51, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0xd4, 0x08, 0x38,
	0x1f, 0x64, 0x76, 0x6a, 0x51, 0x51, 0x7e, 0x11, 0xd8, 0x10, 0xa6, 0x20, 0x08, 0xc7, 0xc8, 0x8b,
	0x8b, 0x03, 0x66, 0x86, 0x90, 0x1d, 0x17, 0x6b, 0x48, 0x51, 0x62, 0x66, 0x9e, 0x90, 0xa4, 0x1e,
	0xcc, 0x91, 0x7a, 0x68, 0x2e, 0x94, 0x92, 0xc0, 0x26, 0x05, 0xb2, 0x5b, 0x89, 0x21, 0x89, 0x0d,
	0xec, 0x43, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x9d, 0x48, 0x4c, 0xf3, 0x00, 0x00,
	0x00,
}
